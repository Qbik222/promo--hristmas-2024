"use strict";

(function () {
  // Cards slider
  // const cardsContainer = document.querySelector('.prize__list'),
  //       cards = document.querySelectorAll('.prize__list-item'),
  //       cardsWrap = document.querySelector('.prize__list-scroll'),
  //       moveRightButton = document.querySelector('.prize__slider-move-right'),
  //       moveLeftButton = document.querySelector('.prize__slider-move-left'),
  //       tabsContainer = document.querySelector('.prize__tabs'),
  //       isMobile = window.innerWidth < 600,
  //       totalCards = cards.length,
  //       cardWidth = cards[0].clientWidth,
  //       cardsMargin = (cardsWrap.clientWidth - cardWidth * totalCards) / (totalCards - 1),
  //       visibleSlides = isMobile ? 1 : Math.ceil(cardsContainer.clientWidth / (cardWidth + cardsMargin)),
  //       totalTabs = Math.ceil(totalCards / visibleSlides),
  //       tabWidth= visibleSlides * (cardWidth + cardsMargin)
  //
  // console.log(tabWidth)
  //
  // let currentSlide = 1;
  // let cardsPosition = 0
  //     for (let i = 1; i <= totalTabs; i++) {
  //         const tab = document.createElement('div');
  //         tab.classList.add('prize__tabs-item');
  //         tabsContainer.appendChild(tab);
  //     }
  //
  // const updateActiveCard = (cards, activeIndex) => {
  //     cards.forEach((card, i) =>{
  //         activeIndex - 1 === i ? card.classList.add("_active") : card.classList.remove("_active")
  //     })
  // }
  // updateActiveCard(cards, currentSlide)
  //
  // const updateTabs = () => {
  //     const activeTab = Math.ceil(currentSlide / visibleSlides);
  //     tabsContainer.childNodes.forEach((tab, index) => {
  //         tab.classList.toggle('_active', index + 1 === activeTab);
  //     });
  // };
  // updateTabs();
  // function setCardsPosition (position) {
  //     cardsWrap.style.transform = `translateX(-${position}px)`;
  // };
  // const moveRight = () => {
  //     if (currentSlide >= totalCards - visibleSlides && isMobile === false) {
  //         currentSlide = 1;
  //         cardsPosition = 0;
  //     }else if(currentSlide === totalCards) {
  //         currentSlide = 1;
  //         cardsPosition = 0;
  //     }else {
  //         const maxPosition = (totalCards - visibleSlides) * (cardWidth + cardsMargin);
  //         if (cardsPosition + cardWidth + cardsMargin > maxPosition) {
  //             cardsPosition = maxPosition;
  //             currentSlide = totalCards - visibleSlides + 1;
  //         } else {
  //             cardsPosition += cardWidth + cardsMargin;
  //             currentSlide++;
  //         }
  //     }
  //     setCardsPosition(cardsPosition);
  //     updateTabs();
  //     updateActiveCard(cards, currentSlide)
  // };
  // const moveLeft = () => {
  //     if(currentSlide === 1 && isMobile === false){
  //         currentSlide = totalCards - visibleSlides;
  //         cardsPosition = ((totalCards - visibleSlides) * (cardWidth + cardsMargin)) -(cardWidth + cardsMargin);
  //     }else if (currentSlide === 2) {
  //         cardsPosition = 0
  //         currentSlide = 1
  //     }else if(currentSlide === 1 && isMobile === true){
  //         currentSlide = totalCards
  //         cardsPosition = totalCards  * (cardWidth + cardsMargin) - (cardWidth + cardsMargin)
  //     }else {
  //         cardsPosition -= cardWidth + cardsMargin;
  //         currentSlide--
  //     }
  //     setCardsPosition(cardsPosition);
  //     updateTabs();
  //     updateActiveCard(cards, currentSlide)
  // };

  var cardsContainer = document.querySelector('.prize__list'),
    cards = document.querySelectorAll('.prize__list-item'),
    cardsWrap = document.querySelector('.prize__list-scroll'),
    moveRightButton = document.querySelector('.prize__slider-move-right'),
    moveLeftButton = document.querySelector('.prize__slider-move-left'),
    tabsContainer = document.querySelector('.prize__tabs'),
    isMobile = window.innerWidth < 600,
    totalCards = cards.length,
    cardWidth = cards[0].clientWidth,
    cardsMargin = (cardsWrap.clientWidth - cardWidth * totalCards) / (totalCards - 1),
    visibleSlides = isMobile ? 1 : Math.ceil(cardsContainer.clientWidth / (cardWidth + cardsMargin)),
    totalTabs = Math.ceil(totalCards / visibleSlides),
    tabWidth = visibleSlides * (cardWidth + cardsMargin);
  var currentSlide = 1;
  var currentTab = 1;
  var cardsPosition = 0;
  console.log(totalTabs);

  // Створення табів
  for (var i = 1; i <= totalTabs; i++) {
    var tab = document.createElement('div');
    tab.classList.add('prize__tabs-item');
    tabsContainer.appendChild(tab);
  }
  var updateActiveCard = function updateActiveCard(cards, activeIndex) {
    cards.forEach(function (card, i) {
      activeIndex - 1 === i ? card.classList.add("_active") : card.classList.remove("_active");
    });
  };
  updateActiveCard(cards, currentSlide);
  var updateTabs = function updateTabs() {
    if (isMobile) {
      var activeTab = Math.ceil(currentSlide / visibleSlides);
      tabsContainer.childNodes.forEach(function (tab, index) {
        tab.classList.toggle('_active', index + 1 === activeTab);
      });
    } else {
      tabsContainer.childNodes.forEach(function (tab, index) {
        tab.classList.remove("_active");
        console.log(currentTab, index);
        index + 1 === currentTab ? tab.classList.add("_active") : null;
      });
    }
  };
  updateTabs();
  function setCardsPosition(position) {
    cardsWrap.style.transform = "translateX(-".concat(position, "px)");
  }
  ;
  var moveRight = function moveRight() {
    if (isMobile) {
      // Мобільна логіка
      if (currentSlide >= totalCards) {
        currentSlide = 1;
        cardsPosition = 0;
      } else {
        cardsPosition += cardWidth + cardsMargin;
        currentSlide++;
      }
    } else {
      if (currentTab === totalTabs) {
        cardsPosition = 0;
        currentTab = 1;
      } else {
        cardsPosition += tabWidth;
        ++currentTab;
      }
    }
    setCardsPosition(cardsPosition);
    updateTabs();
    updateActiveCard(cards, currentSlide);
  };
  var moveLeft = function moveLeft() {
    if (isMobile) {
      // Мобільна логіка
      if (currentSlide === 1) {
        currentSlide = totalCards;
        cardsPosition = (totalCards - 1) * (cardWidth + cardsMargin);
      } else if (currentSlide === 2) {
        currentSlide = 1;
        cardsPosition = 0;
      } else {
        cardsPosition -= cardWidth + cardsMargin;
        currentSlide--;
      }
    } else {
      if (currentTab === 1) {
        currentTab = totalTabs;
        cardsPosition = currentTab * tabWidth - tabWidth;
      } else if (currentTab === 2) {
        cardsPosition = 0;
        currentTab = 1;
      } else {
        cardsPosition -= tabWidth;
        --currentTab;
      }
    }
    console.log(currentTab);
    setCardsPosition(cardsPosition);
    updateTabs();
    updateActiveCard(cards, currentSlide);
  };

  // snowfall animations
  (function () {
    var COUNT = 400;
    function Snowstorm(element) {
      this.masthead = element;
      this.canvas = document.createElement('canvas');
      this.ctx = this.canvas.getContext('2d');
      this.width = this.masthead.clientWidth;
      this.height = this.masthead.clientHeight;
      this.active = false;
      this.snowflakes = [];
      this.init();
    }
    Snowstorm.prototype.init = function () {
      this.canvas.style.position = 'absolute';
      this.canvas.style.left = this.canvas.style.top = '0';
      this.masthead.appendChild(this.canvas);
      this.onResize();
      window.addEventListener('resize', this.onResize.bind(this), false);
      for (var i = 0; i < COUNT; i++) {
        var snowflake = new this.Snowflake(this);
        snowflake.reset();
        this.snowflakes.push(snowflake);
      }
      if (this.active) {
        requestAnimFrame(this.update.bind(this));
      }
    };
    Snowstorm.prototype.onResize = function () {
      this.width = this.masthead.clientWidth;
      this.height = this.masthead.clientHeight;
      this.canvas.width = this.width;
      this.canvas.height = this.height;
      this.ctx.fillStyle = '#FFF';
      var wasActive = this.active;
      this.active = this.width > 80;
      this.width > 280 ? COUNT = 150 : null;
      if (!wasActive && this.active) {
        requestAnimFrame(this.update.bind(this));
      }
    };
    Snowstorm.prototype.update = function () {
      this.ctx.clearRect(0, 0, this.width, this.height);
      if (!this.active) {
        return;
      }
      for (var i = 0; i < COUNT; i++) {
        var snowflake = this.snowflakes[i];
        snowflake.y += snowflake.vy;
        snowflake.x += snowflake.vx;
        this.ctx.globalAlpha = snowflake.o;
        this.ctx.beginPath();
        this.ctx.arc(snowflake.x, snowflake.y, snowflake.r, 0, Math.PI * 2, false);
        this.ctx.closePath();
        this.ctx.fill();
        if (snowflake.y > this.height) {
          snowflake.reset();
        }
      }
      requestAnimFrame(this.update.bind(this));
    };
    Snowstorm.prototype.Snowflake = function (snowstorm) {
      this.snowstorm = snowstorm;
      this.reset();
    };
    Snowstorm.prototype.Snowflake.prototype.reset = function () {
      this.x = Math.random() * this.snowstorm.width;
      this.y = Math.random() * -this.snowstorm.height;
      this.vy = 0.3 + Math.random() * 0.00001;
      this.vx = 0.6 - Math.random();
      this.r = 1 + Math.random() * 2;
      this.o = 1;
    };

    // shim layer with setTimeout fallback
    window.requestAnimFrame = function () {
      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {
        window.setTimeout(callback, 1000 / 60);
      };
    }();

    // Apply Snowstorm to all elements with the class 'sky'
    var skies = document.querySelectorAll('.sky');
    skies.forEach(function (sky) {
      new Snowstorm(sky);
    });
  })();
  var handleResize = function handleResize() {
    var touchStartX = 0;
    var touchEndX = 0;
    var handleTouchStart = function handleTouchStart(event) {
      touchStartX = event.touches[0].clientX;
    };
    var handleTouchMove = function handleTouchMove(event) {
      touchEndX = event.touches[0].clientX;
    };
    var handleTouchEnd = function handleTouchEnd() {
      var swipeDistance = touchStartX - touchEndX;
      if (swipeDistance > 50) {
        // Свайп ліворуч
        moveRight();
      } else if (swipeDistance < -50) {
        // Свайп праворуч
        moveLeft();
      }
      // Скидаємо значення
      touchStartX = 0;
      touchEndX = 0;
    };
    moveRightButton.addEventListener('click', moveRight);
    moveLeftButton.addEventListener('click', moveLeft);
    cardsContainer.addEventListener('touchstart', handleTouchStart);
    cardsContainer.addEventListener('touchmove', handleTouchMove);
    cardsContainer.addEventListener('touchend', handleTouchEnd);
    window.addEventListener("orientationchange", function () {
      location.reload();
    });
  };
  handleResize();
})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiY2FyZHNDb250YWluZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjYXJkcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjYXJkc1dyYXAiLCJtb3ZlUmlnaHRCdXR0b24iLCJtb3ZlTGVmdEJ1dHRvbiIsInRhYnNDb250YWluZXIiLCJpc01vYmlsZSIsIndpbmRvdyIsImlubmVyV2lkdGgiLCJ0b3RhbENhcmRzIiwibGVuZ3RoIiwiY2FyZFdpZHRoIiwiY2xpZW50V2lkdGgiLCJjYXJkc01hcmdpbiIsInZpc2libGVTbGlkZXMiLCJNYXRoIiwiY2VpbCIsInRvdGFsVGFicyIsInRhYldpZHRoIiwiY3VycmVudFNsaWRlIiwiY3VycmVudFRhYiIsImNhcmRzUG9zaXRpb24iLCJjb25zb2xlIiwibG9nIiwiaSIsInRhYiIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJhcHBlbmRDaGlsZCIsInVwZGF0ZUFjdGl2ZUNhcmQiLCJhY3RpdmVJbmRleCIsImZvckVhY2giLCJjYXJkIiwicmVtb3ZlIiwidXBkYXRlVGFicyIsImFjdGl2ZVRhYiIsImNoaWxkTm9kZXMiLCJpbmRleCIsInRvZ2dsZSIsInNldENhcmRzUG9zaXRpb24iLCJwb3NpdGlvbiIsInN0eWxlIiwidHJhbnNmb3JtIiwibW92ZVJpZ2h0IiwibW92ZUxlZnQiLCJDT1VOVCIsIlNub3dzdG9ybSIsImVsZW1lbnQiLCJtYXN0aGVhZCIsImNhbnZhcyIsImN0eCIsImdldENvbnRleHQiLCJ3aWR0aCIsImhlaWdodCIsImNsaWVudEhlaWdodCIsImFjdGl2ZSIsInNub3dmbGFrZXMiLCJpbml0IiwicHJvdG90eXBlIiwibGVmdCIsInRvcCIsIm9uUmVzaXplIiwiYWRkRXZlbnRMaXN0ZW5lciIsImJpbmQiLCJzbm93Zmxha2UiLCJTbm93Zmxha2UiLCJyZXNldCIsInB1c2giLCJyZXF1ZXN0QW5pbUZyYW1lIiwidXBkYXRlIiwiZmlsbFN0eWxlIiwid2FzQWN0aXZlIiwiY2xlYXJSZWN0IiwieSIsInZ5IiwieCIsInZ4IiwiZ2xvYmFsQWxwaGEiLCJvIiwiYmVnaW5QYXRoIiwiYXJjIiwiciIsIlBJIiwiY2xvc2VQYXRoIiwiZmlsbCIsInNub3dzdG9ybSIsInJhbmRvbSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsIndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSIsIm1velJlcXVlc3RBbmltYXRpb25GcmFtZSIsImNhbGxiYWNrIiwic2V0VGltZW91dCIsInNraWVzIiwic2t5IiwiaGFuZGxlUmVzaXplIiwidG91Y2hTdGFydFgiLCJ0b3VjaEVuZFgiLCJoYW5kbGVUb3VjaFN0YXJ0IiwiZXZlbnQiLCJ0b3VjaGVzIiwiY2xpZW50WCIsImhhbmRsZVRvdWNoTW92ZSIsImhhbmRsZVRvdWNoRW5kIiwic3dpcGVEaXN0YW5jZSIsImxvY2F0aW9uIiwicmVsb2FkIl0sIm1hcHBpbmdzIjoiOztBQUFBLENBQUMsWUFBWTtFQUNUO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7RUFFQSxJQUFNQSxjQUFjLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBYSxDQUFDLGNBQWMsQ0FBQztJQUN6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QUNDLE9BQU87SUFDMUMsQ0FBQztJQUNELElBQU1DLGVBQWUsR0FBRyxTQUFsQkEsZUFBZSxDQUFJSCxLQUFLLEVBQUs7TUFDL0JGLFNBQVMsR0FBR0UsS0FBSyxDQUFDQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUNDLE9BQU87SUFDeEMsQ0FBQztJQUNELElBQU1FLGNBQWMsR0FBRyxTQUFqQkEsY0FBYyxHQUFTO01BQ3pCLElBQU1DLGFBQWEsR0FBR1IsV0FBVyxHQUFHQyxTQUFTO01BQzdDLElBQUlPLGFBQWEsR0FBRyxFQUFFLEVBQUU7UUFDcEI7UUFDQTVELFNBQVMsRUFBRTtNQUNmLENBQUMsTUFBTSxJQUFJNEQsYUFBYSxHQUFHLENBQUMsRUFBRSxFQUFFO1FBQzVCO1FBQ0EzRCxRQUFRLEVBQUU7TUFDZDtNQUNBO01BQ0FtRCxXQUFXLEdBQUcsQ0FBQztNQUNmQyxTQUFTLEdBQUcsQ0FBQztJQUNqQixDQUFDO0lBRUQ5RixlQUFlLENBQUM0RCxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUVuQixTQUFTLENBQUM7SUFDcER4QyxjQUFjLENBQUMyRCxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUVsQixRQUFRLENBQUM7SUFDbERoRCxjQUFjLENBQUNrRSxnQkFBZ0IsQ0FBQyxZQUFZLEVBQUVtQyxnQkFBZ0IsQ0FBQztJQUMvRHJHLGNBQWMsQ0FBQ2tFLGdCQUFnQixDQUFDLFdBQVcsRUFBRXVDLGVBQWUsQ0FBQztJQUM3RHpHLGNBQWMsQ0FBQ2tFLGdCQUFnQixDQUFDLFVBQVUsRUFBRXdDLGNBQWMsQ0FBQztJQUMzRGhHLE1BQU0sQ0FBQ3dELGdCQUFnQixDQUFDLG1CQUFtQixFQUFFLFlBQUs7TUFDOUMwQyxRQUFRLENBQUNDLE1BQU0sRUFBRTtJQUNyQixDQUFDLENBQUM7RUFDTixDQUFDO0VBRURYLFlBQVksRUFBRTtBQUVsQixDQUFDLEdBQUciLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoKSB7XG4gICAgLy8gQ2FyZHMgc2xpZGVyXG4gICAgLy8gY29uc3QgY2FyZHNDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJpemVfX2xpc3QnKSxcbiAgICAvLyAgICAgICBjYXJkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wcml6ZV9fbGlzdC1pdGVtJyksXG4gICAgLy8gICAgICAgY2FyZHNXcmFwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByaXplX19saXN0LXNjcm9sbCcpLFxuICAgIC8vICAgICAgIG1vdmVSaWdodEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcml6ZV9fc2xpZGVyLW1vdmUtcmlnaHQnKSxcbiAgICAvLyAgICAgICBtb3ZlTGVmdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcml6ZV9fc2xpZGVyLW1vdmUtbGVmdCcpLFxuICAgIC8vICAgICAgIHRhYnNDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJpemVfX3RhYnMnKSxcbiAgICAvLyAgICAgICBpc01vYmlsZSA9IHdpbmRvdy5pbm5lcldpZHRoIDwgNjAwLFxuICAgIC8vICAgICAgIHRvdGFsQ2FyZHMgPSBjYXJkcy5sZW5ndGgsXG4gICAgLy8gICAgICAgY2FyZFdpZHRoID0gY2FyZHNbMF0uY2xpZW50V2lkdGgsXG4gICAgLy8gICAgICAgY2FyZHNNYXJnaW4gPSAoY2FyZHNXcmFwLmNsaWVudFdpZHRoIC0gY2FyZFdpZHRoICogdG90YWxDYXJkcykgLyAodG90YWxDYXJkcyAtIDEpLFxuICAgIC8vICAgICAgIHZpc2libGVTbGlkZXMgPSBpc01vYmlsZSA/IDEgOiBNYXRoLmNlaWwoY2FyZHNDb250YWluZXIuY2xpZW50V2lkdGggLyAoY2FyZFdpZHRoICsgY2FyZHNNYXJnaW4pKSxcbiAgICAvLyAgICAgICB0b3RhbFRhYnMgPSBNYXRoLmNlaWwodG90YWxDYXJkcyAvIHZpc2libGVTbGlkZXMpLFxuICAgIC8vICAgICAgIHRhYldpZHRoPSB2aXNpYmxlU2xpZGVzICogKGNhcmRXaWR0aCArIGNhcmRzTWFyZ2luKVxuICAgIC8vXG4gICAgLy8gY29uc29sZS5sb2codGFiV2lkdGgpXG4gICAgLy9cbiAgICAvLyBsZXQgY3VycmVudFNsaWRlID0gMTtcbiAgICAvLyBsZXQgY2FyZHNQb3NpdGlvbiA9IDBcbiAgICAvLyAgICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gdG90YWxUYWJzOyBpKyspIHtcbiAgICAvLyAgICAgICAgIGNvbnN0IHRhYiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIC8vICAgICAgICAgdGFiLmNsYXNzTGlzdC5hZGQoJ3ByaXplX190YWJzLWl0ZW0nKTtcbiAgICAvLyAgICAgICAgIHRhYnNDb250YWluZXIuYXBwZW5kQ2hpbGQodGFiKTtcbiAgICAvLyAgICAgfVxuICAgIC8vXG4gICAgLy8gY29uc3QgdXBkYXRlQWN0aXZlQ2FyZCA9IChjYXJkcywgYWN0aXZlSW5kZXgpID0+IHtcbiAgICAvLyAgICAgY2FyZHMuZm9yRWFjaCgoY2FyZCwgaSkgPT57XG4gICAgLy8gICAgICAgICBhY3RpdmVJbmRleCAtIDEgPT09IGkgPyBjYXJkLmNsYXNzTGlzdC5hZGQoXCJfYWN0aXZlXCIpIDogY2FyZC5jbGFzc0xpc3QucmVtb3ZlKFwiX2FjdGl2ZVwiKVxuICAgIC8vICAgICB9KVxuICAgIC8vIH1cbiAgICAvLyB1cGRhdGVBY3RpdmVDYXJkKGNhcmRzLCBjdXJyZW50U2xpZGUpXG4gICAgLy9cbiAgICAvLyBjb25zdCB1cGRhdGVUYWJzID0gKCkgPT4ge1xuICAgIC8vICAgICBjb25zdCBhY3RpdmVUYWIgPSBNYXRoLmNlaWwoY3VycmVudFNsaWRlIC8gdmlzaWJsZVNsaWRlcyk7XG4gICAgLy8gICAgIHRhYnNDb250YWluZXIuY2hpbGROb2Rlcy5mb3JFYWNoKCh0YWIsIGluZGV4KSA9PiB7XG4gICAgLy8gICAgICAgICB0YWIuY2xhc3NMaXN0LnRvZ2dsZSgnX2FjdGl2ZScsIGluZGV4ICsgMSA9PT0gYWN0aXZlVGFiKTtcbiAgICAvLyAgICAgfSk7XG4gICAgLy8gfTtcbiAgICAvLyB1cGRhdGVUYWJzKCk7XG4gICAgLy8gZnVuY3Rpb24gc2V0Q2FyZHNQb3NpdGlvbiAocG9zaXRpb24pIHtcbiAgICAvLyAgICAgY2FyZHNXcmFwLnN0eWxlLnRyYW5zZm9ybSA9IGB0cmFuc2xhdGVYKC0ke3Bvc2l0aW9ufXB4KWA7XG4gICAgLy8gfTtcbiAgICAvLyBjb25zdCBtb3ZlUmlnaHQgPSAoKSA9PiB7XG4gICAgLy8gICAgIGlmIChjdXJyZW50U2xpZGUgPj0gdG90YWxDYXJkcyAtIHZpc2libGVTbGlkZXMgJiYgaXNNb2JpbGUgPT09IGZhbHNlKSB7XG4gICAgLy8gICAgICAgICBjdXJyZW50U2xpZGUgPSAxO1xuICAgIC8vICAgICAgICAgY2FyZHNQb3NpdGlvbiA9IDA7XG4gICAgLy8gICAgIH1lbHNlIGlmKGN1cnJlbnRTbGlkZSA9PT0gdG90YWxDYXJkcykge1xuICAgIC8vICAgICAgICAgY3VycmVudFNsaWRlID0gMTtcbiAgICAvLyAgICAgICAgIGNhcmRzUG9zaXRpb24gPSAwO1xuICAgIC8vICAgICB9ZWxzZSB7XG4gICAgLy8gICAgICAgICBjb25zdCBtYXhQb3NpdGlvbiA9ICh0b3RhbENhcmRzIC0gdmlzaWJsZVNsaWRlcykgKiAoY2FyZFdpZHRoICsgY2FyZHNNYXJnaW4pO1xuICAgIC8vICAgICAgICAgaWYgKGNhcmRzUG9zaXRpb24gKyBjYXJkV2lkdGggKyBjYXJkc01hcmdpbiA+IG1heFBvc2l0aW9uKSB7XG4gICAgLy8gICAgICAgICAgICAgY2FyZHNQb3NpdGlvbiA9IG1heFBvc2l0aW9uO1xuICAgIC8vICAgICAgICAgICAgIGN1cnJlbnRTbGlkZSA9IHRvdGFsQ2FyZHMgLSB2aXNpYmxlU2xpZGVzICsgMTtcbiAgICAvLyAgICAgICAgIH0gZWxzZSB7XG4gICAgLy8gICAgICAgICAgICAgY2FyZHNQb3NpdGlvbiArPSBjYXJkV2lkdGggKyBjYXJkc01hcmdpbjtcbiAgICAvLyAgICAgICAgICAgICBjdXJyZW50U2xpZGUrKztcbiAgICAvLyAgICAgICAgIH1cbiAgICAvLyAgICAgfVxuICAgIC8vICAgICBzZXRDYXJkc1Bvc2l0aW9uKGNhcmRzUG9zaXRpb24pO1xuICAgIC8vICAgICB1cGRhdGVUYWJzKCk7XG4gICAgLy8gICAgIHVwZGF0ZUFjdGl2ZUNhcmQoY2FyZHMsIGN1cnJlbnRTbGlkZSlcbiAgICAvLyB9O1xuICAgIC8vIGNvbnN0IG1vdmVMZWZ0ID0gKCkgPT4ge1xuICAgIC8vICAgICBpZihjdXJyZW50U2xpZGUgPT09IDEgJiYgaXNNb2JpbGUgPT09IGZhbHNlKXtcbiAgICAvLyAgICAgICAgIGN1cnJlbnRTbGlkZSA9IHRvdGFsQ2FyZHMgLSB2aXNpYmxlU2xpZGVzO1xuICAgIC8vICAgICAgICAgY2FyZHNQb3NpdGlvbiA9ICgodG90YWxDYXJkcyAtIHZpc2libGVTbGlkZXMpICogKGNhcmRXaWR0aCArIGNhcmRzTWFyZ2luKSkgLShjYXJkV2lkdGggKyBjYXJkc01hcmdpbik7XG4gICAgLy8gICAgIH1lbHNlIGlmIChjdXJyZW50U2xpZGUgPT09IDIpIHtcbiAgICAvLyAgICAgICAgIGNhcmRzUG9zaXRpb24gPSAwXG4gICAgLy8gICAgICAgICBjdXJyZW50U2xpZGUgPSAxXG4gICAgLy8gICAgIH1lbHNlIGlmKGN1cnJlbnRTbGlkZSA9PT0gMSAmJiBpc01vYmlsZSA9PT0gdHJ1ZSl7XG4gICAgLy8gICAgICAgICBjdXJyZW50U2xpZGUgPSB0b3RhbENhcmRzXG4gICAgLy8gICAgICAgICBjYXJkc1Bvc2l0aW9uID0gdG90YWxDYXJkcyAgKiAoY2FyZFdpZHRoICsgY2FyZHNNYXJnaW4pIC0gKGNhcmRXaWR0aCArIGNhcmRzTWFyZ2luKVxuICAgIC8vICAgICB9ZWxzZSB7XG4gICAgLy8gICAgICAgICBjYXJkc1Bvc2l0aW9uIC09IGNhcmRXaWR0aCArIGNhcmRzTWFyZ2luO1xuICAgIC8vICAgICAgICAgY3VycmVudFNsaWRlLS1cbiAgICAvLyAgICAgfVxuICAgIC8vICAgICBzZXRDYXJkc1Bvc2l0aW9uKGNhcmRzUG9zaXRpb24pO1xuICAgIC8vICAgICB1cGRhdGVUYWJzKCk7XG4gICAgLy8gICAgIHVwZGF0ZUFjdGl2ZUNhcmQoY2FyZHMsIGN1cnJlbnRTbGlkZSlcbiAgICAvLyB9O1xuXG4gICAgY29uc3QgY2FyZHNDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJpemVfX2xpc3QnKSxcbiAgICAgICAgY2FyZHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucHJpemVfX2xpc3QtaXRlbScpLFxuICAgICAgICBjYXJkc1dyYXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJpemVfX2xpc3Qtc2Nyb2xsJyksXG4gICAgICAgIG1vdmVSaWdodEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcml6ZV9fc2xpZGVyLW1vdmUtcmlnaHQnKSxcbiAgICAgICAgbW92ZUxlZnRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJpemVfX3NsaWRlci1tb3ZlLWxlZnQnKSxcbiAgICAgICAgdGFic0NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcml6ZV9fdGFicycpLFxuICAgICAgICBpc01vYmlsZSA9IHdpbmRvdy5pbm5lcldpZHRoIDwgNjAwLFxuICAgICAgICB0b3RhbENhcmRzID0gY2FyZHMubGVuZ3RoLFxuICAgICAgICBjYXJkV2lkdGggPSBjYXJkc1swXS5jbGllbnRXaWR0aCxcbiAgICAgICAgY2FyZHNNYXJnaW4gPSAoY2FyZHNXcmFwLmNsaWVudFdpZHRoIC0gY2FyZFdpZHRoICogdG90YWxDYXJkcykgLyAodG90YWxDYXJkcyAtIDEpLFxuICAgICAgICB2aXNpYmxlU2xpZGVzID0gaXNNb2JpbGUgPyAxIDogTWF0aC5jZWlsKGNhcmRzQ29udGFpbmVyLmNsaWVudFdpZHRoIC8gKGNhcmRXaWR0aCArIGNhcmRzTWFyZ2luKSksXG4gICAgICAgIHRvdGFsVGFicyA9IE1hdGguY2VpbCh0b3RhbENhcmRzIC8gdmlzaWJsZVNsaWRlcyksXG4gICAgICAgIHRhYldpZHRoPSB2aXNpYmxlU2xpZGVzICogKGNhcmRXaWR0aCArIGNhcmRzTWFyZ2luKVxuXG4gICAgbGV0IGN1cnJlbnRTbGlkZSA9IDE7XG4gICAgbGV0IGN1cnJlbnRUYWIgPSAxO1xuICAgIGxldCBjYXJkc1Bvc2l0aW9uID0gMDtcbiAgICBjb25zb2xlLmxvZyh0b3RhbFRhYnMpXG5cbi8vINCh0YLQstC+0YDQtdC90L3RjyDRgtCw0LHRltCyXG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gdG90YWxUYWJzOyBpKyspIHtcbiAgICAgICAgY29uc3QgdGFiID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHRhYi5jbGFzc0xpc3QuYWRkKCdwcml6ZV9fdGFicy1pdGVtJyk7XG4gICAgICAgIHRhYnNDb250YWluZXIuYXBwZW5kQ2hpbGQodGFiKTtcbiAgICB9XG5cbiAgICBjb25zdCB1cGRhdGVBY3RpdmVDYXJkID0gKGNhcmRzLCBhY3RpdmVJbmRleCkgPT4ge1xuICAgICAgICBjYXJkcy5mb3JFYWNoKChjYXJkLCBpKSA9PiB7XG4gICAgICAgICAgICBhY3RpdmVJbmRleCAtIDEgPT09IGkgPyBjYXJkLmNsYXNzTGlzdC5hZGQoXCJfYWN0aXZlXCIpIDogY2FyZC5jbGFzc0xpc3QucmVtb3ZlKFwiX2FjdGl2ZVwiKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICB1cGRhdGVBY3RpdmVDYXJkKGNhcmRzLCBjdXJyZW50U2xpZGUpO1xuXG4gICAgY29uc3QgdXBkYXRlVGFicyA9ICgpID0+IHtcbiAgICAgICAgaWYoaXNNb2JpbGUpe1xuICAgICAgICAgICAgY29uc3QgYWN0aXZlVGFiID0gTWF0aC5jZWlsKGN1cnJlbnRTbGlkZSAvIHZpc2libGVTbGlkZXMpO1xuICAgICAgICAgICAgdGFic0NvbnRhaW5lci5jaGlsZE5vZGVzLmZvckVhY2goKHRhYiwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICB0YWIuY2xhc3NMaXN0LnRvZ2dsZSgnX2FjdGl2ZScsIGluZGV4ICsgMSA9PT0gYWN0aXZlVGFiKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgIHRhYnNDb250YWluZXIuY2hpbGROb2Rlcy5mb3JFYWNoKCh0YWIsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgdGFiLmNsYXNzTGlzdC5yZW1vdmUoXCJfYWN0aXZlXCIpXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coY3VycmVudFRhYiwgaW5kZXgpXG4gICAgICAgICAgICAgICAgaW5kZXggKyAxID09PSBjdXJyZW50VGFiID8gdGFiLmNsYXNzTGlzdC5hZGQoXCJfYWN0aXZlXCIpIDogbnVsbFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuXG4gICAgfTtcbiAgICB1cGRhdGVUYWJzKCk7XG5cbiAgICBmdW5jdGlvbiBzZXRDYXJkc1Bvc2l0aW9uKHBvc2l0aW9uKSB7XG4gICAgICAgIGNhcmRzV3JhcC5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlWCgtJHtwb3NpdGlvbn1weClgO1xuICAgIH07XG5cbiAgICBjb25zdCBtb3ZlUmlnaHQgPSAoKSA9PiB7XG4gICAgICAgIGlmIChpc01vYmlsZSkge1xuICAgICAgICAgICAgLy8g0JzQvtCx0ZbQu9GM0L3QsCDQu9C+0LPRltC60LBcbiAgICAgICAgICAgIGlmIChjdXJyZW50U2xpZGUgPj0gdG90YWxDYXJkcykge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRTbGlkZSA9IDE7XG4gICAgICAgICAgICAgICAgY2FyZHNQb3NpdGlvbiA9IDA7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNhcmRzUG9zaXRpb24gKz0gY2FyZFdpZHRoICsgY2FyZHNNYXJnaW47XG4gICAgICAgICAgICAgICAgY3VycmVudFNsaWRlKys7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZihjdXJyZW50VGFiID09PSB0b3RhbFRhYnMpe1xuICAgICAgICAgICAgICAgIGNhcmRzUG9zaXRpb24gPSAwXG4gICAgICAgICAgICAgICAgY3VycmVudFRhYiA9IDFcbiAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICAgIGNhcmRzUG9zaXRpb24gKz0gdGFiV2lkdGhcbiAgICAgICAgICAgICAgICArK2N1cnJlbnRUYWJcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBzZXRDYXJkc1Bvc2l0aW9uKGNhcmRzUG9zaXRpb24pO1xuICAgICAgICB1cGRhdGVUYWJzKCk7XG4gICAgICAgIHVwZGF0ZUFjdGl2ZUNhcmQoY2FyZHMsIGN1cnJlbnRTbGlkZSk7XG4gICAgfTtcblxuICAgIGNvbnN0IG1vdmVMZWZ0ID0gKCkgPT4ge1xuICAgICAgICBpZiAoaXNNb2JpbGUpIHtcbiAgICAgICAgICAgIC8vINCc0L7QsdGW0LvRjNC90LAg0LvQvtCz0ZbQutCwXG4gICAgICAgICAgICBpZiAoY3VycmVudFNsaWRlID09PSAxKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudFNsaWRlID0gdG90YWxDYXJkcztcbiAgICAgICAgICAgICAgICBjYXJkc1Bvc2l0aW9uID0gKHRvdGFsQ2FyZHMgLSAxKSAqIChjYXJkV2lkdGggKyBjYXJkc01hcmdpbik7XG4gICAgICAgICAgICB9ZWxzZSBpZihjdXJyZW50U2xpZGUgPT09IDIpe1xuICAgICAgICAgICAgICAgIGN1cnJlbnRTbGlkZSA9IDE7XG4gICAgICAgICAgICAgICAgY2FyZHNQb3NpdGlvbiA9IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNhcmRzUG9zaXRpb24gLT0gY2FyZFdpZHRoICsgY2FyZHNNYXJnaW47XG4gICAgICAgICAgICAgICAgY3VycmVudFNsaWRlLS07XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgIGlmKGN1cnJlbnRUYWIgPT09IDEpe1xuICAgICAgICAgICAgICAgIGN1cnJlbnRUYWIgPSB0b3RhbFRhYnNcbiAgICAgICAgICAgICAgICBjYXJkc1Bvc2l0aW9uID0gKGN1cnJlbnRUYWIgKiB0YWJXaWR0aCkgLSB0YWJXaWR0aFxuICAgICAgICAgICAgfWVsc2UgaWYoY3VycmVudFRhYiA9PT0gMil7XG4gICAgICAgICAgICAgICAgY2FyZHNQb3NpdGlvbiA9IDBcbiAgICAgICAgICAgICAgICBjdXJyZW50VGFiID0gMVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY2FyZHNQb3NpdGlvbiAtPSB0YWJXaWR0aFxuICAgICAgICAgICAgICAgIC0tY3VycmVudFRhYlxuXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuICAgICAgICBjb25zb2xlLmxvZyhjdXJyZW50VGFiKVxuICAgICAgICBzZXRDYXJkc1Bvc2l0aW9uKGNhcmRzUG9zaXRpb24pO1xuICAgICAgICB1cGRhdGVUYWJzKCk7XG4gICAgICAgIHVwZGF0ZUFjdGl2ZUNhcmQoY2FyZHMsIGN1cnJlbnRTbGlkZSk7XG4gICAgfTtcblxuXG5cbiAgICAvLyBzbm93ZmFsbCBhbmltYXRpb25zXG4gICAgKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIENPVU5UID0gNDAwO1xuXG4gICAgICAgIGZ1bmN0aW9uIFNub3dzdG9ybShlbGVtZW50KSB7XG4gICAgICAgICAgICB0aGlzLm1hc3RoZWFkID0gZWxlbWVudDtcbiAgICAgICAgICAgIHRoaXMuY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XG4gICAgICAgICAgICB0aGlzLmN0eCA9IHRoaXMuY2FudmFzLmdldENvbnRleHQoJzJkJyk7XG4gICAgICAgICAgICB0aGlzLndpZHRoID0gdGhpcy5tYXN0aGVhZC5jbGllbnRXaWR0aDtcbiAgICAgICAgICAgIHRoaXMuaGVpZ2h0ID0gdGhpcy5tYXN0aGVhZC5jbGllbnRIZWlnaHQ7XG4gICAgICAgICAgICB0aGlzLmFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5zbm93Zmxha2VzID0gW107XG5cbiAgICAgICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgU25vd3N0b3JtLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhpcy5jYW52YXMuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xuICAgICAgICAgICAgdGhpcy5jYW52YXMuc3R5bGUubGVmdCA9IHRoaXMuY2FudmFzLnN0eWxlLnRvcCA9ICcwJztcbiAgICAgICAgICAgIHRoaXMubWFzdGhlYWQuYXBwZW5kQ2hpbGQodGhpcy5jYW52YXMpO1xuXG4gICAgICAgICAgICB0aGlzLm9uUmVzaXplKCk7XG4gICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5vblJlc2l6ZS5iaW5kKHRoaXMpLCBmYWxzZSk7XG5cbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgQ09VTlQ7IGkrKykge1xuICAgICAgICAgICAgICAgIHZhciBzbm93Zmxha2UgPSBuZXcgdGhpcy5Tbm93Zmxha2UodGhpcyk7XG4gICAgICAgICAgICAgICAgc25vd2ZsYWtlLnJlc2V0KCk7XG4gICAgICAgICAgICAgICAgdGhpcy5zbm93Zmxha2VzLnB1c2goc25vd2ZsYWtlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHRoaXMuYWN0aXZlKSB7XG4gICAgICAgICAgICAgICAgcmVxdWVzdEFuaW1GcmFtZSh0aGlzLnVwZGF0ZS5iaW5kKHRoaXMpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcblxuICAgICAgICBTbm93c3Rvcm0ucHJvdG90eXBlLm9uUmVzaXplID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhpcy53aWR0aCA9IHRoaXMubWFzdGhlYWQuY2xpZW50V2lkdGg7XG4gICAgICAgICAgICB0aGlzLmhlaWdodCA9IHRoaXMubWFzdGhlYWQuY2xpZW50SGVpZ2h0O1xuICAgICAgICAgICAgdGhpcy5jYW52YXMud2lkdGggPSB0aGlzLndpZHRoO1xuICAgICAgICAgICAgdGhpcy5jYW52YXMuaGVpZ2h0ID0gdGhpcy5oZWlnaHQ7XG4gICAgICAgICAgICB0aGlzLmN0eC5maWxsU3R5bGUgPSAnI0ZGRic7XG5cbiAgICAgICAgICAgIHZhciB3YXNBY3RpdmUgPSB0aGlzLmFjdGl2ZTtcbiAgICAgICAgICAgIHRoaXMuYWN0aXZlID0gdGhpcy53aWR0aCA+IDgwO1xuICAgICAgICAgICAgdGhpcy53aWR0aCA+IDI4MCA/IENPVU5UID0gMTUwIDogbnVsbFxuXG4gICAgICAgICAgICBpZiAoIXdhc0FjdGl2ZSAmJiB0aGlzLmFjdGl2ZSkge1xuICAgICAgICAgICAgICAgIHJlcXVlc3RBbmltRnJhbWUodGhpcy51cGRhdGUuYmluZCh0aGlzKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgU25vd3N0b3JtLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB0aGlzLmN0eC5jbGVhclJlY3QoMCwgMCwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpO1xuXG4gICAgICAgICAgICBpZiAoIXRoaXMuYWN0aXZlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IENPVU5UOyBpKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgc25vd2ZsYWtlID0gdGhpcy5zbm93Zmxha2VzW2ldO1xuICAgICAgICAgICAgICAgIHNub3dmbGFrZS55ICs9IHNub3dmbGFrZS52eTtcbiAgICAgICAgICAgICAgICBzbm93Zmxha2UueCArPSBzbm93Zmxha2Uudng7XG5cbiAgICAgICAgICAgICAgICB0aGlzLmN0eC5nbG9iYWxBbHBoYSA9IHNub3dmbGFrZS5vO1xuICAgICAgICAgICAgICAgIHRoaXMuY3R4LmJlZ2luUGF0aCgpO1xuICAgICAgICAgICAgICAgIHRoaXMuY3R4LmFyYyhzbm93Zmxha2UueCwgc25vd2ZsYWtlLnksIHNub3dmbGFrZS5yLCAwLCBNYXRoLlBJICogMiwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIHRoaXMuY3R4LmNsb3NlUGF0aCgpO1xuICAgICAgICAgICAgICAgIHRoaXMuY3R4LmZpbGwoKTtcblxuICAgICAgICAgICAgICAgIGlmIChzbm93Zmxha2UueSA+IHRoaXMuaGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgICAgIHNub3dmbGFrZS5yZXNldCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmVxdWVzdEFuaW1GcmFtZSh0aGlzLnVwZGF0ZS5iaW5kKHRoaXMpKTtcbiAgICAgICAgfTtcblxuICAgICAgICBTbm93c3Rvcm0ucHJvdG90eXBlLlNub3dmbGFrZSA9IGZ1bmN0aW9uIChzbm93c3Rvcm0pIHtcbiAgICAgICAgICAgIHRoaXMuc25vd3N0b3JtID0gc25vd3N0b3JtO1xuICAgICAgICAgICAgdGhpcy5yZXNldCgpO1xuICAgICAgICB9O1xuXG4gICAgICAgIFNub3dzdG9ybS5wcm90b3R5cGUuU25vd2ZsYWtlLnByb3RvdHlwZS5yZXNldCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHRoaXMueCA9IE1hdGgucmFuZG9tKCkgKiB0aGlzLnNub3dzdG9ybS53aWR0aDtcbiAgICAgICAgICAgIHRoaXMueSA9IE1hdGgucmFuZG9tKCkgKiAtdGhpcy5zbm93c3Rvcm0uaGVpZ2h0O1xuICAgICAgICAgICAgdGhpcy52eSA9IDAuMyArIE1hdGgucmFuZG9tKCkgKiAwLjAwMDAxO1xuICAgICAgICAgICAgdGhpcy52eCA9IDAuNiAtIE1hdGgucmFuZG9tKCk7XG4gICAgICAgICAgICB0aGlzLnIgPSAxICsgTWF0aC5yYW5kb20oKSAqIDI7XG4gICAgICAgICAgICB0aGlzLm8gPSAxO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIHNoaW0gbGF5ZXIgd2l0aCBzZXRUaW1lb3V0IGZhbGxiYWNrXG4gICAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbUZyYW1lID0gKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG4gICAgICAgICAgICAgICAgd2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuICAgICAgICAgICAgICAgIHdpbmRvdy5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LnNldFRpbWVvdXQoY2FsbGJhY2ssIDEwMDAgLyA2MCk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgfSkoKTtcblxuICAgICAgICAvLyBBcHBseSBTbm93c3Rvcm0gdG8gYWxsIGVsZW1lbnRzIHdpdGggdGhlIGNsYXNzICdza3knXG4gICAgICAgIHZhciBza2llcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5za3knKTtcbiAgICAgICAgc2tpZXMuZm9yRWFjaChmdW5jdGlvbiAoc2t5KSB7XG4gICAgICAgICAgICBuZXcgU25vd3N0b3JtKHNreSk7XG4gICAgICAgIH0pO1xuICAgIH0pKCk7XG5cbiAgICBjb25zdCBoYW5kbGVSZXNpemUgPSAoKSA9PntcbiAgICAgICAgbGV0IHRvdWNoU3RhcnRYID0gMDtcbiAgICAgICAgbGV0IHRvdWNoRW5kWCA9IDA7XG4gICAgICAgIGNvbnN0IGhhbmRsZVRvdWNoU3RhcnQgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIHRvdWNoU3RhcnRYID0gZXZlbnQudG91Y2hlc1swXS5jbGllbnRYO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBoYW5kbGVUb3VjaE1vdmUgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIHRvdWNoRW5kWCA9IGV2ZW50LnRvdWNoZXNbMF0uY2xpZW50WDtcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgaGFuZGxlVG91Y2hFbmQgPSAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBzd2lwZURpc3RhbmNlID0gdG91Y2hTdGFydFggLSB0b3VjaEVuZFg7XG4gICAgICAgICAgICBpZiAoc3dpcGVEaXN0YW5jZSA+IDUwKSB7XG4gICAgICAgICAgICAgICAgLy8g0KHQstCw0LnQvyDQu9GW0LLQvtGA0YPRh1xuICAgICAgICAgICAgICAgIG1vdmVSaWdodCgpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChzd2lwZURpc3RhbmNlIDwgLTUwKSB7XG4gICAgICAgICAgICAgICAgLy8g0KHQstCw0LnQvyDQv9GA0LDQstC+0YDRg9GHXG4gICAgICAgICAgICAgICAgbW92ZUxlZnQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vINCh0LrQuNC00LDRlNC80L4g0LfQvdCw0YfQtdC90L3Rj1xuICAgICAgICAgICAgdG91Y2hTdGFydFggPSAwO1xuICAgICAgICAgICAgdG91Y2hFbmRYID0gMDtcbiAgICAgICAgfTtcblxuICAgICAgICBtb3ZlUmlnaHRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBtb3ZlUmlnaHQpO1xuICAgICAgICBtb3ZlTGVmdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG1vdmVMZWZ0KTtcbiAgICAgICAgY2FyZHNDb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIGhhbmRsZVRvdWNoU3RhcnQpO1xuICAgICAgICBjYXJkc0NvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBoYW5kbGVUb3VjaE1vdmUpO1xuICAgICAgICBjYXJkc0NvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIGhhbmRsZVRvdWNoRW5kKTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJvcmllbnRhdGlvbmNoYW5nZVwiLCAoKSA9PntcbiAgICAgICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgaGFuZGxlUmVzaXplKClcblxufSkoKTsiXX0=
